class Solution {
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
        // int n=nums.size();
        // vector<int>ans;
        // for(int i=0;i<n;i++){
        //     int count=0;
        //     for(int j=0;j<n;j++){
        //         if(nums[i]>nums[j]){
        //             count++;
        //         }
        //     }
        //     ans.push_back(count);
        // }
        // return ans;
        vector<int>res=nums;
        sort(res.begin(),res.end());
        unordered_map<int,int>mpp;
        int n=nums.size();
        for(int i=0;i<nums.size();i++){
            if(mpp.find(res[i])==mpp.end()) {
                mpp[res[i]]=i;
            }
        }
        vector<int>ans;
        for(int x:nums){
            ans.push_back(mpp[x]);
        }
        return ans;
    }
};